# -*- coding: utf-8 -*-
"""01_basic_calculation_vector.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1IQ1hXzG464qaU0WpNwHWfoj2YEA67ZFv
"""

def zero_mat(n, p):
  """
  영행렬 생성
  입력값 : 생성하고자 할 영행렬의 크기 n행, p열
  출력값 : (n x p) 영행렬 Z
  """
  Z = []
  for i in range(0, n):
    row = []
    for j in range(0, p):
      row.append(0)
    Z.append(row)
  return Z



def deepcopy(A):
  """
  깊은 복사(deepcopy) 구현
  입력값 : 깊은 복사를 하고자 하는 행렬 리스트 A
  출력값 : 깊은 복사된 결과 행렬 리스트 res
  """
  if type(A[0]) == list:
    n = len(A)
    p = len(A[0])
    res = zero_mat(n, p)
    for i in range(0, n):
      for j in range(0, p):
        res[i][j] = A[i][j]
    return res
  else:
    n = len(A)
    res = []
    for i in range(0, n):
      res.append(A[i])
    return res

A = [[1, 2], [3, 4]]
B = deepcopy(A)

print(B)

def v_add(u, v):
  """
  벡터의 덧셈
  입력값 : 더하고자 하는 벡터 리스트 u, v
  출력값 : 벡터 u, v의 덧셈 결과 w
  """
  n = len(u)
  w = []

  for i in range(0, n):
    val = u[i] + v[i]
    w.append(val)

  return w

def v_subtract(u, v):
  """
  벡터의 뺄셈
  입력값 : 빼고자 하는 벡터 리스트 u, v
  출력값 : 벡터 u, v의 뺄셈 결과 w
  """
  n = len(u)
  w = []

  for i in range(0, n):
    val = u[i] - v[i]
    w.append(val)

  return w

def scalar_v_mul(a, u):
  """
  벡터와 스칼라의 곱
  입력값 : 스칼라 a, 벡터 리스트 u
  출력값 : 스칼라 a와 벡터 리스트 u의 곱 결과 w
  """
  n = len(u)
  w = []

  for i in range(0, n):
    val = a * u[i]
    w.append(val)

  return w

def v_mul(u, v):
  """
  벡터의 원소 곱
  입력값 : 원소 곱하고자 하는 벡터 리스트 u, v
  출력값 : 벡터 u, v의 원소 곱 결과 w
  """
  n = len(u)
  w = []

  for i in range(0, n):
    val = u[i] * v[i]
    w.append(val)

  return w

def v_div(u, v):
  """
  벡터의 원소 나눗셈
  입력값 : 원소 나눗셈하고자 하는 벡터 리스트 u, v
  출력값 : 벡터 u, v의 원소 나눗셈 결과 w
  """
  n = len(u)
  w = []

  for i in range(0, n):
    val = u[i] / v[i]
    w.append(val)

  return w

u = [1, 2, 3]
v = [4, 5, 6]
v_add(u, v)

u = [7, 3, 9]
v = [2, 5, 7]
v_subtract(u, v)

u = [1, 2, 4]
v = [7, 3, 2]
v_mul(u, v)

u = [6, 5, 9]
v = [2, 2, -3]
v_div(u, v)

import numpy as np

# 벡터의 덧셈
u = np.array([1, 2, 3])
v = np.array([4, 5, 6])
w = u + v
print(w)

# 벡터의 뺄셈
u = np.array([7, 3, 9])
v = np.array([2, 5, 7])
w = u - v
print(w)

# 벡터의 스칼라 곱
a = 3
u = np.array([1, 2, 4])
w = a * u
print(w)

# 벡터의 원소 곱
u = np.array([1, 2, 4])
v = np.array([7, 3, 2])
w = u * v
print(w)

# 벡터의 나눗셈
u = np.array([6, 5, 9])
v = np.array([2, 2, -3])
w = u / v
print(w)

